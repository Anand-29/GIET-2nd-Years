class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=None
    def insertEnd(self,data):
        newNode=Node(data)
        if(self.head==None):
            self.head=newNode
        else:
            temp=self.head
            while(temp.next!=None):
                temp=temp.next
            temp.next=newNode
    def insertFront(self,data):
        newNode=Node(data)
        newNode.next=self.head
        self.head=newNode
    def deleteFront(self):
        if(self.head==None):
            print("Empty list")
            return
        temp=self.head
        self.head=temp.next
        del temp
    def insertAtPosition(self,data,index):
        newNode=Node(data)
        if(index>0):
            temp=self.head
            while(index-1>0):
                temp=temp.next
                index-=1
            temp2=temp.next
            temp.next=newNode
            newNode.next=temp2
            return
        newnode.next=self.head
        self.head=newNode
    def deleteAtPosition(self,index):
        if(index>0):
            temp=self.head
            while(index-1>0):
                temp=temp.next
                index-=1
            temp2=temp.next
            temp.next=temp2.next
            del temp2
            return
        temp=self.head
        self.head=temp.next
        del temp
    def size(self,c=0):
        temp=self.head
        while(temp!=None):
            temp=temp.next
            c+=1
        return c
    def deleteAtEnd(self):
        temp1=self.head
        temp2=temp1.next
        while(temp2.next!=None):
            temp1=temp1.next
            temp2=temp2.next
        temp1.next=None
        del temp2
    def display(self):
        temp=self.head
        while(temp!=None):
            print(temp.data)
            temp=temp.next
        
ob=LinkedList()
ob.insertEnd(10)
ob.insertEnd(20)
ob.insertEnd(30)
ob.deleteFront()
ob.display()


