def precedence(i):
    if(i=='*' or i=='/'):
        return 2
    if(i=='+' or i=='-'):
        return 1
    else:
        return -1
n=input("Enter the Expression")
stack=[]
solution=""
for i in n:
    if(i>='0' and i<='9'):
        solution+=i
    elif(i=="("):
        stack.append(i)
    elif(i==")"):
        while(len(stack)!=0 and stack[len(stack)-1]!="("):
            solution+=stack.pop()
        stack.pop()
    elif(i=='+'):
        while(len(stack)!=0 and precedence(stack[len(stack)-1])>precedence(i)):
           solution+=stack.pop()
        stack.append(i)
    elif(i=='-'):
        while(len(stack)!=0 and precedence(stack[len(stack)-1])>precedence(i)):
           solution+=stack.pop()
        stack.append(i)
    elif(i=='*'):
        while(len(stack)!=0 and precedence(stack[len(stack)-1])>precedence(i)):
           solution+=stack.pop()
        stack.append(i)
    elif(i=='/'):
        while(len(stack)!=0 and precedence(stack[len(stack)-1])>precedence(i)):
           solution+=stack.pop()
        stack.append(i)
while len(stack)!=0:
    solution+=stack.pop()
print("Postfix:- ",solution)
for i in solution:
    if(i>='0' and i<='9'):
        stack.append(i)
    else:
        v1=int(stack.pop())
        v2=int(stack.pop())
        if(i=='+'):
            stack.append(v1+v2)
        if(i=='-'):
            stack.append(v1-v2)
        if(i=='*'):
            stack.append(v1*v2)
        if(i=='/'):
            stack.append(v1/v2)
print("Solution:- "stack[len(stack)-1])
